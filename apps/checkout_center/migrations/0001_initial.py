# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-09-21 02:43
from __future__ import unicode_literals

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=10, unique=True, verbose_name='用户姓名')),
                ('gender', models.CharField(choices=[('female', '女'), ('male', '男')], default='male', max_length=6, verbose_name='性别')),
                ('datetime', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeskDish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dish_num', models.IntegerField(default=0, verbose_name='菜品数量')),
                ('is_served', models.IntegerField(choices=[(1, '已经上菜'), (2, '没有上菜')], default=2, verbose_name='是否已上菜')),
                ('catering_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='聚餐时间')),
            ],
            options={
                'verbose_name': '点单',
                'verbose_name_plural': '点单',
            },
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='菜品名称')),
                ('introduction', models.TextField(max_length=130, verbose_name='菜品简介')),
                ('price', models.FloatField(verbose_name='单价')),
                ('category', models.CharField(choices=[('1', '炒菜'), ('2', '烧菜'), ('3', '汤锅'), ('4', '主菜'), ('5', '蒸菜烧烤'), ('6', '凉拌卤菜'), ('7', '酒水饮料'), ('8', '小吃水果')], default='1', max_length=5, verbose_name='菜品种类')),
            ],
            options={
                'verbose_name': '菜品',
                'verbose_name_plural': '菜品',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_name', models.CharField(max_length=20, verbose_name='订单人姓名')),
                ('desk_number', models.IntegerField(default=1, verbose_name='桌号')),
                ('total_mount', models.FloatField(default=0.0, verbose_name='总计金额')),
                ('is_paid', models.BooleanField(default=False, verbose_name='是否已支付')),
                ('creation_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('catering_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='聚餐时间')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.AddField(
            model_name='deskdish',
            name='Dish',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout_center.Dish', verbose_name='菜名'),
        ),
        migrations.AddField(
            model_name='deskdish',
            name='order_desk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='OrderDish', to='checkout_center.Order', verbose_name='桌子编号'),
        ),
    ]
